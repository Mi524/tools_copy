Function add_regex_package(wbObj As Workbook)
'防止EXCEL没有引用正则5.5版本包
'增加引用正则表达式的模块,如果文件路径不对 导致报错，点击工具，选择Macrosoft VBScript Regular Expression 5.5,
'勾选之后，可以看到勾选框下方有个“定位”，该位置就是正则表达式包的存放位置
    Set vbProj = wbObj.VBProject
    regex_load_tag = False
    
        For Each chkref In vbProj.references
            If chkref.Name = "VBScript_RegExp_55" Then
                regex_load_tag = True
            End If
        
        Next chkref
    '如果发现没有自动加载正则的包，需要填入默认存放位置加载
    If Not regex_load_tag = True Then
        vbProj.references.AddFromFile "C:\Windows\System32\vbscript.dll\3"
    End If

End Function

Public Function adjustDataLabelPosition(ChtObject As Variant) As Variant

    For Each Series In ChtObject.Chart.SeriesCollection
    
        '数值标签格式调整
        For Each Point In Series.Points
            pointCounter = pointCounter + 1
        
            With Point
                .HasDataLabel = True

                '数字标签格式调整
                .DataLabel.Position = xlLabelPositionAbove
                .DataLabel.Font.Color = RGB(200, 200, 200)
                .DataLabel.Font.Name = "微软雅黑"
                .DataLabel.Font.Size = 9
            End With
        Next Point
    
    Next Series
   
End Function


Function next_date(date_text As Variant) As Variant
    date_input = CDate(date_text)
    next_date = date_input + 1
End Function


Function calc_day(start_date As Variant, end_date As Variant) As Integer
    
    start_date_input = CDate(start_date) - 1
    end_date_input = CDate(end_date)
    
    next_date_value = next_date(start_date_input)
    
    counter = 0
    if_end = False
    While if_end <> True
        counter = counter + 1
        next_date_value = next_date(next_date_value)
        
        If DateDiff("d", next_date_value, end_date_input) < 0 Then
            if_end = True
        End If
    Wend
    calc_day = counter - 1
    
End Function


Function extract_number(text As String, replace_mode As Integer) As String
'获取X人X天里面的两个数字
    Dim human_str As String
    Dim day_str As String
    
    If InStr(text, "人") = False Or InStr(text, "天") = False Then
        extract_number = ""
    Else:
        If replace_mode = 1 Then
            human_str = Split(text, "人")(0)
            extract_number = CDbl(human_str)
        Else:
            day_str = Split(text, "人")(1)
            day_str = Replace(day_str, "天", "")
            extract_number = CDbl(day_str)
        End If
    End If
End Function

Function get_regex_letter(text As String) As String
    Dim regEx2 As New RegExp
    
    regEx2.Pattern = "\d{1,3}"
    get_regex_letter = regEx2.Replace(text, "")

End Function

Function get_work_day(summary_sheet As Worksheet)
   '后面的正则replace函数必须填入string格式，必须先声明human_day_value的变量类型,否则报错格式不匹配
    Dim human_day_value As String
    Dim columnCount As Long
    Dim rowCount As Long
    
    '清除掉表格的筛选
    summary_sheet.AutoFilter.ShowAllData
    
    '最远行
    rowCount = summary_sheet.Cells(summary_sheet.Rows.Count, 1).End(xlUp).Row
    Debug.Print (rowCount)
    Debug.Print ("--------")
    '最远列
    columnCount = summary_sheet.Cells(1, summary_sheet.Columns.Count).End(xlToLeft).Column
    
     '如果最后一列表头不是“天数”'，插入两个新的列（如果已经有“天数”的表头，说明前面已经计算过天数，不再添加）
    If Trim(summary_sheet.Cells(1, columnCount).Value) <> "天数" Then
        For i = 1 To columnCount
            If Trim(summary_sheet.Cells(1, i).Value) = "人*天" Then
              '获取人天 在第几列
                human_day_index = i
            End If
        Next i
        
        'https://docs.microsoft.com/en-us/office/vba/api/excel.range.insert
        '插入两个新的列
        summary_sheet.Columns(columnCount + 1).Insert
        summary_sheet.Columns(columnCount + 2).Insert
        
        summary_sheet.Cells(1, columnCount + 1).Value = "人数"
        summary_sheet.Cells(1, columnCount + 2).Value = "天数"
        
        For i = 2 To rowCount
            '得到X人X天
            human_day_value = summary_sheet.Cells(i, columnCount).Value
            '拆分 null
            human_num = extract_number(human_day_value, 1)
            day_num = extract_number(human_day_value, 2)
            summary_sheet.Cells(i, columnCount + 1).Value = human_num
            summary_sheet.Cells(i, columnCount + 2).Value = day_num
        Next i
    End If
    
    '新的columnCount
    columnCount = summary_sheet.Cells(1, summary_sheet.Columns.Count).End(xlToLeft).Column
    '统一加上边框线
    summary_sheet.Range(summary_sheet.Cells(1, 1), summary_sheet.Cells(rowCount, columnCount)).Borders.LineStyle = xlContinuous
    
End Function

Function get_quarter_enddate(date_text As Variant) As Date
    '根据日期求该日期所在季度的最后一天
    '参考 http://codevba.com/office/quarter_date_functions.htm#Last_day_in_quarter
    get_quarter_enddate = DateSerial(Year(CDate(date_text)), Int((Month(CDate(date_text)) - 1) / 3) * 3 + 4, 0)

End Function

Function get_quarter_startdate(date_text As Variant) As Date
    '根据日期求该日期所在季度的第一天
    '参考 http://codevba.com/office/quarter_date_functions.htm
    get_quarter_startdate = DateSerial(Year(CDate(date_text)), Int((Month(CDate(date_text)) - 1) / 3) * 3 + 1, 1)

End Function


Function delete_strikethrough(summary_sheet As Worksheet)

    Dim r As Integer
    Dim c As Integer
    Dim rowCount As Integer
    Dim columnCount As Integer
    
    '如果发现某个单元格有删除线，删掉整行记录
    rowCount = summary_sheet.Cells(summary_sheet.Rows.Count, 1).End(xlUp).Row + 1
    '记录第一行最远的列
    columnCount = summary_sheet.Cells(1, summary_sheet.Columns.Count).End(xlToLeft).Column
    
    counter = 0
    '从后往前检查删除线出现的位置行,(行索引每次删除都会出现变化，需要倒序进行删除)
    For r = rowCount To 2 Step -1
        For c = 1 To columnCount
            If summary_sheet.Cells(r, c).Font.Strikethrough = True Then
                summary_sheet.Rows(r).EntireRow.Delete
                Debug.Print (counter & ":删除第" & r & "行")
                '本行删除后，跳出当前循环
                counter = counter + 1
                Exit For
            End If
        Next c
    Next r
    Debug.Print ("检查删除线完成")

End Function



Sub macroScript()

    Dim columnCount As Long
    Dim rowCount As Long
    Dim main_rng As Range
    Dim new_ws As Worksheet
    Dim standard_country_ws As Worksheet
    Dim summary_sheet As Worksheet
    Dim end_date_number As Integer
    Dim ws_count As Integer
    Dim max_plan_day As Integer
    Dim original_wb As Workbook
    Dim today_date As Date
    Dim start_quarter_date As Date
    Dim end_quarter_date As Date
    Dim country_max_row As Integer
    
    Dim date_column_width As Long
    Dim Formula1 As String
    Dim formula2 As String
    Dim column_letter As String
    Dim formula_address_previous_column As String
    Dim formula_address1 As String
    Dim formula_address2 As String
    Dim chart_range As Range
    
    '运行期间不更新窗口 加快运行速度
    Application.ScreenUpdating = False
    
    '读取原始的输入文档
    Set original_wb = Workbooks("需求汇总-输入.xlsx")
    
    '载入正则表达式的包
    add_regex_package original_wb
    
    '获取测试表
    Set summary_sheet = original_wb.Worksheets("海外测试需求总概Summary")
    '获取国家表
    Set standard_country_ws = original_wb.Worksheets("国家表")
    
    '删掉带有删除线的行,循环过多
    delete_strikethrough summary_sheet

    '计算汇总表的人力和天数字段
    get_work_day summary_sheet

    summary_sheet.AutoFilter.ShowAllData
    
    summary_sheet.Activate
    '记录第一列最远的行
    rowCount = summary_sheet.Cells(summary_sheet.Rows.Count, 1).End(xlUp).Row + 1
    '记录第一行最远的列
    columnCount = summary_sheet.Cells(1, summary_sheet.Columns.Count).End(xlToLeft).Column
    '获取范围
    Set main_rng = summary_sheet.Range(summary_sheet.Cells(1, 1), summary_sheet.Cells(rowCount + 1, columnCount))
        
    '填充右上方的开始日期和结束日期，需要用到start_date和end_date,
    'start_date可以人工指定，或者直接采用该列最小的日期作为start_date
    start_date = Application.WorksheetFunction.Min(summary_sheet.Columns(5))
    start_date = get_quarter_startdate(start_date)
    max_plan_day = Application.WorksheetFunction.Max(summary_sheet.Columns(10))
    
    '最大的截止日期为 最大的计划结束日期 + 最大的测试规划天数得到日期的所在季度最后一天
    end_date = Application.WorksheetFunction.Max(summary_sheet.Columns(6)) + max_plan_day
    end_date = get_quarter_enddate(end_date)
    
    '不可以放set在前面,set涉及到对象和引用概念
    end_date_number = calc_day(start_date, end_date)

    '今天所在季度的最后一天, 可以填别的日期生成另一个需要季度图表
    'today_date = Date
    today_date = CDate("2021-04-06")
    start_quarter_date = get_quarter_startdate(today_date)
    end_quarter_date = get_quarter_enddate(today_date)
    
    '右下角 画图，折线图不支持超过255个数据点，所以每次只画1个季度图表长度，
    '起始位置的列为columnCount + 2 + 本季度起始日期对应的点 + 本季度截止日期对应的点
    quarter_start_position = columnCount + 2 + DateDiff("d", start_date, start_quarter_date)
    quarter_end_position = quarter_start_position + DateDiff("d", start_quarter_date, end_quarter_date)

    ws_count_counter = 0
    ws_count_counter = ws_count_counter + 1
    
    '定义右边第一行 日期的列宽
    date_column_width = 4
    
    Debug.Print ("数据最小季度开始日期:" & Application.WorksheetFunction.text(start_date, "yyyy-mm-dd"))
    Debug.Print ("数据最大季度结束日期:" & Application.WorksheetFunction.text(end_date, "yyyy-mm-dd"))
    Debug.Print ("数据当前季度开始日期:" & Application.WorksheetFunction.text(start_quarter_date, "yyyy-mm-dd"))
        
     '生成新的EXCEL文档
    Set new_wb = Workbooks.Add
    
    For i = 3 To 3
    'For i = 2 To standard_country_ws.Cells(standard_country_ws.Rows.Count, 1).End(xlUp).Row
         '获取国家
        country = standard_country_ws.Cells(i, 1).Value
    
        Debug.Print ("国家:" & country)

        If country <> "" Then
            '通过国家名新建sheet,往最后添加表格
            new_wb.Activate
            new_wb.Worksheets.Add after:=new_wb.Worksheets(ws_count_counter)
            
            ActiveSheet.Name = country
            Set new_ws = new_wb.Worksheets(country)
            
            original_wb.Activate

            '根据国家条件过滤
            main_rng.AutoFilter field:=4, Criteria1:=country
            
            main_rng.CurrentRegion.Select
            '复制
            Selection.Copy
            
            new_ws.Activate
            '选择复制目标的开始位置
            new_ws.Range("A1").Select
            '先粘贴内容的列宽 --> 发现同等列宽下新生成的表格左边位置太大，不要复制列宽
            'Selection.PasteSpecial Paste:=xlPasteColumnWidths
            '再粘贴内容（带所有的内容格式粘贴）
            Selection.PasteSpecial Paste:=xlPasteAll, operation:=xlNone, skipblanks:=False, Transpose:=False
            
            '先获取每个国家最大的行，列数是固定的columnCount
            country_max_row = new_ws.Cells(new_ws.Rows.Count, 1).End(xlUp).Row
            '后面需要替换开始时间
            next_date_value = start_date
            
            '填充右边日期表头
            For j = columnCount + 2 To columnCount + 2 + end_date_number

                With new_ws.Cells(1, j)
                    .Value = next_date_value
                    .Font.Size = 9
                    .Font.Name = "微软雅黑"
                    .Font.ColorIndex = 2
                    .Interior.ColorIndex = 23
                    '修改日期格式
                    .NumberFormat = "m/d"
                    next_date_value = next_date(next_date_value)
                End With
                '修改列宽
                new_ws.Columns(j).ColumnWidth = date_column_width
            Next j

            '填充人力计划区域(右边的人数填充)
            For k = 2 To country_max_row
                start_date_plan = new_ws.Cells(k, 5).Value
                human_plan = new_ws.Cells(k, 9).Value
                day_plan = new_ws.Cells(k, 10).Value
                
                If IsNull(start_date_plan) = False And IsNull(day_plan) = False And start_date_plan <> "" And human_plan <> "" Then
            
                    '计算start_date_plan的日期的单元格应该在哪个位置,最小日期填充在主表最后一列往后的两列，
                    '目标填充日期的单元格位置列坐标 应该等于  columnCount + 2 + 目标日期和开始日期之间的日期差异
                    start_position = columnCount + 2 + DateDiff("d", start_date, start_date_plan)
                    '循环
                    For g_i = start_position To start_position + day_plan - 1 Step 1

                        new_ws.Cells(k, g_i).Value = human_plan
                        '颜色比例：黄色=1人 绿色=2人 蓝色 >2人
                        If human_plan = 1 Then
                            color_fill_index = 6
                        ElseIf human_plan = 2 Then
                            color_fill_index = 43
                        Else:
                            color_fill_index = 41
                        End If
                        
                        new_ws.Cells(k, g_i).Interior.ColorIndex = color_fill_index
                        
                    Next g_i
                End If

            Next k
            
            '计算右下方汇总人数: 计划出差人数  海外网络适应性-4G 海外网络适应性-5G 海外本地化测试
            Value1 = "计划出差人数"
            Value2 = "海外网络适应性-4G"
            Value3 = "海外网络适应性-5G"
            Value4 = "海外本地化测试"
            new_ws.Cells(country_max_row + 1, columnCount + 1).Value = Value1
            new_ws.Cells(country_max_row + 2, columnCount + 1).Value = Value2
            new_ws.Cells(country_max_row + 3, columnCount + 1).Value = Value3
            new_ws.Cells(country_max_row + 4, columnCount + 1).Value = Value4
            
            new_ws.Columns(columnCount + 1).ColumnWidth = 12
            
            '计算出差总人数  循环开始 最后一列 + 空白列 到 表头日期最后一列
            For h = columnCount + 2 To columnCount + 2 + end_date_number
            'sum公式 需要填充的位置
               formula_address1 = new_ws.Cells(2, h).Address(RowAbsolute:=False, ColumnAbsolute:=False) '公式的第一个位置点
               formula_address2 = new_ws.Cells(country_max_row, h).Address(RowAbsolute:=False, ColumnAbsolute:=False)
               '计算出差总人数字符位置的列在哪里
               formula_address_previous_column = new_ws.Cells(2, columnCount + 1).Address(RowAbsolute:=False, ColumnAbsolute:=False)
               '本列位置的字母是什么
               column_letter = get_regex_letter(formula_address_previous_column)
               '如果该国家记录为空，公式计算范围避开第一行的表头日期，直接赋值为0
               If country_max_row > 1 Then
                   Formula1 = "=sum(" & formula_address1 & ":" & formula_address2 & ")"
               Else:
                   Formula1 = "0"
               End If
               
               formula2 = "=sumif(" & "B2" & ":" & "B" & country_max_row & "," & column_letter & (country_max_row + 2) & "," & formula_address1 & ":" & formula_address2 & ")"
               formula3 = "=sumif(" & "B2" & ":" & "B" & country_max_row & "," & column_letter & (country_max_row + 3) & "," & formula_address1 & ":" & formula_address2 & ")"
               formula4 = "=sumif(" & "B2" & ":" & "B" & country_max_row & "," & column_letter & (country_max_row + 4) & "," & formula_address1 & ":" & formula_address2 & ")"

               new_ws.Cells(country_max_row + 1, h).Formula = Formula1
               new_ws.Cells(country_max_row + 2, h).Formula = formula2
               new_ws.Cells(country_max_row + 3, h).Formula = formula3
               new_ws.Cells(country_max_row + 4, h).Formula = formula4

            Next h
            '打印行，起始日期位置，结束位置
            'Debug.Print (country_max_row)
            'Debug.Print (quarter_start_position)
            'Debug.Print (quarter_end_position)
            
            Set chart_range = new_ws.Range(new_ws.Cells(country_max_row + 1, quarter_start_position), new_ws.Cells(country_max_row + 1, quarter_end_position))

            Set chart_line = new_ws.Shapes.AddChart2
            ' PlotBy修改 以月份日期做x轴
            chart_line.Chart.SetSourceData Source:=chart_range, PlotBy:=xlRows
            
            '调整图表高度和宽度
            chart_line.Height = 15 * 16 '图高8厘米, 字体大小为9
            '这里图表的宽度和第一行表头日期的列宽相关,N个单元格的列宽 * 这个季度有多少天
            chart_line.Width = (quarter_end_position - quarter_start_position) * 4 * 7
            '设置图表为折线图
            chart_line.Chart.ChartType = 4
            '图表标题
            chart_line.Chart.HasTitle = True
            chart_line.Chart.ChartTitle.text = country & Month(start_quarter_date) & "月-" & Month(end_quarter_date) & "月" & "测试人力需求"
            
            '去掉legend
            chart_line.Chart.HasLegend = False
            
            '设定X轴的数值位置，第一行，一个季度的单元格长度
            chart_line.Chart.SeriesCollection(1).XValues = new_ws.Range(new_ws.Cells(1, quarter_start_position), new_ws.Cells(1, quarter_end_position))
            chart_line.Chart.Axes(xlCategory).TickLabels.NumberFormat = "m/d"
            chart_line.Chart.Axes(xlCategory).TickLabels.Font.Name = "微软雅黑"
            chart_line.Chart.Axes(xlCategory).TickLabels.Font.Size = 9
            
            '设置图表背景颜色
            chart_line.Chart.ChartStyle = 233
            
            adjustDataLabelPosition chart_line

            '移动表格位置
            graphRow = country_max_row + 6
            '表格列开始位置 要和 季度开始位置联动
            graphColumn = quarter_start_position
            
            chart_line.Left = new_ws.Range(new_ws.Cells(graphRow, graphColumn), new_ws.Cells(graphRow, graphColumn)).Left
            chart_line.Top = new_ws.Range(new_ws.Cells(graphRow, graphColumn), new_ws.Cells(graphRow, graphColumn)).Top
            
            '全选表格单元格，将所有字体改成微软雅黑，调成9
            Cells.Select
            Cells.Font.Name = "微软雅黑"
            Cells.Font.Size = 9
                     
            '冻结窗口,冻结第一行，冻结开始的列 就是本季度第一天,即表格开始放置的当列
            new_ws.Activate
            new_ws.Range(new_ws.Cells(2, graphColumn), new_ws.Cells(2, graphColumn)).Select

            With ActiveWindow
                .SplitRow = 1
                .SplitColumn = columnCount + 1
                .FreezePanes = True
            End With
            
            ActiveWindow.ScrollColumn = ActiveCell.Column

        End If
    Next i
    
    '如果有已经同名的文档，不弹出提示窗口，直接覆盖保存
    Application.DisplayAlerts = False
    
    '删除new_ws多出的Sheet1
    new_wb.Worksheets("Sheet1").Delete
    summary_sheet.AutoFilter.ShowAllData
    
    '放进一个相对路径,这个路径没有指定放到哪个文件夹，可能会出现在C盘的文档(documents文件夹)
    save_file_path = "通信测试中心人力安排计划(各国).xlsx"

    new_wb.Close SaveChanges:=True, Filename:=save_file_path

    '保存输入文档,
    'original_wb.Save
    'original_wb.Close SaveChanges:=True
    Debug.Print ("运行结束")
    
End Sub